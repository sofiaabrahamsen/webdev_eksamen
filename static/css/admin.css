.tab_container {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    margin: 2rem;
}

.tabs {
    display: flex;
    cursor: pointer;
    gap: 1rem;
    margin-bottom: 1rem;
}

.tab:hover {
    background: var(--cta-hover-col);
}

.tab.active {
    background: var(--cta-hover-col);
}

.tab_content {
    display: none;
    width: 100%;
}

.tab_content.active {
    display: block;
}

div.tab_header:has(h2) {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
}



table {
    width: 100%; /* Table spans the full width of the container */
    border-collapse: collapse; /* Remove space between table cells */
}

thead tr {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
    text-align: left;
    padding: 1.1rem;
}


tbody tr {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr; /* Make each row behave like a block element */
    margin-bottom: 10px; /* Add space between rows */
    border: 1px solid #ddd; /* Optional: Add a border around rows */
    border-radius: 8px; /* Optional: Round the edges for a card-like effect */
    padding: 0.6rem; /* Add padding inside each row */
    background-color: var(--tertiary-col); /* Optional: Background color for rows */

    > td {
        align-self: center;
        text-align: left;
    }

    > td:last-child {
        text-align: end;
    }
}

tbody tr:hover {
    background-color: var(--cta-hover-col); /* Optional: Add a hover effect */
    color: var(--secondary-col);
    cursor: pointer;
}

tbody td::before {
    content: attr(data-label); /* Use a custom label before the data */
    display: inline-block; /* Align the label inline */
    margin-right: 10px; /* Add space between label and value */
}
